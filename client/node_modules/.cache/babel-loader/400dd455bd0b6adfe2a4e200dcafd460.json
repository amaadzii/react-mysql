{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sarai\\\\Documents\\\\aldi\\\\uas\\\\react-mysql\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Axios from 'axios';\nimport React, { useState } from \"react\";\nimport EditableTable from './components/EditableTable/EditableTable';\n\nfunction App() {\n  _s();\n\n  const [queryResult, setQueryResult] = useState([]); // Object that contain all of query result (SELECT * FROM anggota).\n\n  const [columns, setColumns] = useState([]); // Column name. \n  //#region \n\n  const [addFields, setAddFields] = useState({}); //#endregion\n\n  const getQueryResult = () => {\n    Axios.get(\"http://localhost:3001/anggota\").then(response => {\n      setQueryResult(response.data);\n      let newColumns = [];\n      Object.keys(response.data[0]).map((value, index) => {\n        return newColumns.push(value);\n      });\n      setColumns(newColumns);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const deleteTable = (columnName, value) => {\n    Axios.post(\"http://localhost:3001/delete\", {\n      columnName: columnName,\n      value: value\n    }).then(response => {\n      getQueryResult();\n    });\n  };\n\n  const insertQueryResult = e => {\n    e.preventDefault();\n    Axios.post(\"http://localhost:3001/insert\", addFields).then(response => {\n      getQueryResult();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Apotek Jakarta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getQueryResult,\n      children: \"Intialize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditableTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Anggota: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [columns.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: value,\n          onChange: event => {\n            const value = event.target.value;\n            setAddFields(prevValue => {\n              return { ...prevValue,\n                [columns[index]]: value\n              };\n            });\n          },\n          value: addFields[columns[index]]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => insertQueryResult(e),\n        children: \"Add Anggota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"C7Eagh9LA++DfBpyPeoy/Hn5gS4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/sarai/Documents/aldi/uas/react-mysql/client/src/App.js"],"names":["Axios","React","useState","EditableTable","App","queryResult","setQueryResult","columns","setColumns","addFields","setAddFields","getQueryResult","get","then","response","data","newColumns","Object","keys","map","value","index","push","catch","error","console","log","deleteTable","columnName","post","insertQueryResult","e","preventDefault","event","target","prevValue"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport Axios from 'axios';\r\nimport React, { useState } from \"react\";\r\nimport EditableTable from './components/EditableTable/EditableTable';\r\n\r\nfunction App() {\r\n  const [queryResult, setQueryResult] = useState([]); // Object that contain all of query result (SELECT * FROM anggota).\r\n  const [columns, setColumns] = useState([]);  // Column name. \r\n\r\n  //#region \r\n  const [addFields, setAddFields] = useState({});\r\n  //#endregion\r\n\r\n  const getQueryResult = () => {\r\n    Axios.get(\"http://localhost:3001/anggota\",).then((response) => {\r\n      setQueryResult(response.data);\r\n\r\n      let newColumns = [];\r\n      Object.keys(response.data[0]).map((value, index) => {\r\n        return newColumns.push(value);\r\n      })\r\n      setColumns(newColumns); \r\n    }).catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  const deleteTable = (columnName, value) => {  \r\n    Axios.post(\"http://localhost:3001/delete\",\r\n      {\r\n        columnName: columnName,\r\n        value: value\r\n      }\r\n    ).then((response) => { \r\n      getQueryResult();\r\n    }) \r\n    \r\n  }\r\n\r\n  const insertQueryResult = (e) => {\r\n    e.preventDefault();\r\n \r\n    Axios.post(\"http://localhost:3001/insert\", addFields).then((response) => {\r\n      getQueryResult();\r\n    }) \r\n  } \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Apotek Jakarta</h1>\r\n      <button onClick={getQueryResult}>Intialize</button>\r\n      <EditableTable>\r\n        \r\n      </EditableTable>\r\n      <br></br>\r\n      <h3>Add Anggota: </h3>\r\n      {\r\n        <form>\r\n          {columns.map((value, index) => {\r\n            return (\r\n              <input\r\n                key={index}\r\n                placeholder={value}\r\n                onChange={(event) => {\r\n                  const value = event.target.value;\r\n                  setAddFields((prevValue) => {\r\n                    return {\r\n                      ...prevValue,\r\n                      [columns[index]]: value\r\n                    }\r\n                  })\r\n                }}\r\n                value={addFields[columns[index]]}\r\n              ></input>\r\n            )\r\n          })}\r\n          <button onClick={(e) => insertQueryResult(e)}>Add Anggota</button>\r\n        </form>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}