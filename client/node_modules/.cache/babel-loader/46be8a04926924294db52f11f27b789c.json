{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sarai\\\\Documents\\\\aldi\\\\uas\\\\react-mysql\\\\client\\\\src\\\\components\\\\EditableTable\\\\EditableTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport AddRowToTable from '../AddRowToTable/AddRowToTable';\nimport Server from '../../Axios/ServerAPI';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport Notification from '../Notification/Notification';\n\nconst EditableTable = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [tableData, setTableData] = useState([{}]); // Start\n\n  useEffect(() => {\n    update(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const update = () => {\n    Server.fetchTableData(props.tableName).then(res => {\n      setTableData(res.data);\n    });\n  };\n\n  const editHandler = defaultData => {\n    dispatch(actions.setEditModal(true, defaultData, props.tableName, update));\n  };\n\n  const deleteHandler = (columnName, value) => {\n    Server.deleteFromTable(props.tableName, columnName, value).then(res => {\n      update();\n    });\n  };\n\n  let actionHeader = /*#__PURE__*/_jsxDEV(\"th\", {\n    children: \"Action\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 24\n  }, this);\n\n  let addButton = /*#__PURE__*/_jsxDEV(AddRowToTable, {\n    tableName: props.tableName,\n    onClick: update\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n\n  if (tableData.length <= 0) {\n    actionHeader = /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"Empty Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (!props.Editable) {\n    addButton = null;\n    actionHeader = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.tableName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [// Render table column name \n          tableData[0] ? Object.keys(tableData[0]).map((columnName, index) => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              children: columnName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 44\n            }, this);\n          }) : null, actionHeader]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: // Render table content  \n        tableData ? tableData.map((objectData, objId) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [objectData ? Object.keys(objectData).map((keyName, index) => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: objectData[keyName]\n              }, objId + \" \" + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 57\n              }, this);\n            }) : null, props.Editable ? /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  editHandler(objectData);\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const columnName = Object.keys(objectData)[0];\n                  deleteHandler(columnName, objectData[columnName]);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 49\n            }, this) : null]\n          }, objId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 37\n          }, this);\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), addButton]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditableTable, \"58XlveYxam49b6yHKzbEaXGuIZQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditableTable;\nexport default EditableTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableTable\");","map":{"version":3,"sources":["C:/Users/sarai/Documents/aldi/uas/react-mysql/client/src/components/EditableTable/EditableTable.js"],"names":["React","useEffect","useState","AddRowToTable","Server","useDispatch","actions","Notification","EditableTable","props","dispatch","tableData","setTableData","update","fetchTableData","tableName","then","res","data","editHandler","defaultData","setEditModal","deleteHandler","columnName","value","deleteFromTable","actionHeader","addButton","length","Editable","width","Object","keys","map","index","objectData","objId","keyName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AddRowToTable from '../AddRowToTable/AddRowToTable';\r\nimport Server from '../../Axios/ServerAPI';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\nimport Notification from '../Notification/Notification'\r\n\r\nconst EditableTable = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [tableData, setTableData] = useState([{}]);\r\n\r\n    // Start\r\n    useEffect(() => {\r\n        update();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const update = () => {\r\n        Server.fetchTableData(props.tableName).then(res => { setTableData(res.data) })\r\n    }\r\n\r\n    const editHandler = (defaultData) => {\r\n        dispatch(actions.setEditModal(true, defaultData, props.tableName, update));\r\n    }\r\n\r\n    const deleteHandler = (columnName, value) => {\r\n        Server.deleteFromTable(props.tableName, columnName, value).then(res => {\r\n            update();\r\n        })\r\n    }\r\n    let actionHeader = <th>Action</th>;\r\n\r\n    let addButton = <AddRowToTable\r\n        tableName={props.tableName} \r\n        onClick={update}\r\n    ></AddRowToTable>\r\n\r\n    if(tableData.length <= 0){\r\n        actionHeader = <th>Empty Table</th>\r\n    }\r\n\r\n    if (!props.Editable) {\r\n        addButton = null;\r\n        actionHeader = null; \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>{props.tableName}</h3>\r\n            <table style={{ width: \"100%\" }}>\r\n                <thead>\r\n                    <tr>\r\n                        { // Render table column name \r\n                            tableData[0] ?\r\n                                Object.keys(tableData[0]).map((columnName, index) => {\r\n                                    return <th key={index}>{columnName}</th>\r\n                                })\r\n                                : null\r\n                        }\r\n                        {actionHeader}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {// Render table content  \r\n                        tableData ?\r\n                            tableData.map((objectData, objId) => {\r\n                                return (\r\n                                    <tr key={objId}>\r\n                                        {\r\n                                            objectData ?\r\n                                            Object.keys(objectData).map((keyName, index) => {\r\n                                                return (<td key={objId + \" \" + index}>{objectData[keyName]}</td>)\r\n                                            })\r\n                                            : null\r\n                                        }\r\n                                        {\r\n                                            props.Editable ?\r\n                                                <td>\r\n                                                    <button onClick={() => {\r\n                                                        editHandler(objectData);\r\n                                                    }}>Edit</button>\r\n                                                    <button onClick={() => {\r\n                                                        const columnName = Object.keys(objectData)[0];\r\n                                                        deleteHandler(columnName, objectData[columnName]);\r\n                                                    }\r\n                                                    }>Delete</button>\r\n                                                </td>\r\n                                                : null\r\n                                        }\r\n                                    </tr>\r\n                                )\r\n                            }) : null\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            {addButton}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditableTable;"]},"metadata":{},"sourceType":"module"}