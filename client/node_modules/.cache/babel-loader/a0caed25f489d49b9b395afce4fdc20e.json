{"ast":null,"code":"import axios from 'axios'; //#region Axios requests   \n\nconst insertQueryResult = objectToAdd => {\n  Axios.post(\"http://localhost:3001/insert\", objectToAdd).then(response => {\n    getQueryResult();\n  });\n}; //#endregion\n\n\nexport const fetchSelectedTableSync = tableData => {\n  return {\n    type: FETCH_SELECTED_TABLE,\n    payload: tableData\n  };\n}; //#region Async methods\n\nexport const fetchSelectedTable = () => {\n  return dispatch => {\n    Axios.get(\"http://localhost:3001/getTable\").then(response => {\n      const tableDatas = response.data;\n      dispatch(fetchSelectedTable(tableData));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const deleteFromSelectedTable = (columnName, value) => {\n  return dispatch => {\n    Axios.post(\"http://localhost:3001/delete\", {\n      columnName: columnName,\n      value: value\n    }).then(response => {\n      getQueryResult();\n      dispatch(deleteTable(columnName, value));\n    });\n  };\n};\nexport const insertToSelectedTable = objectToAdd => {\n  return dispatch => {\n    dispatch(insertQueryResult(objectToAdd));\n  };\n}; //#endregion\n//#region Actions name\n\nexport const REQUEST_SELECTED_TABLE = \"REQUEST_SELECTED_TABLE\";\nexport const FETCH_SELECTED_TABLE = \"FETCH_SELECTED_TABLE\";\nexport const ADD_TO_SELECTED_TABLE = 'ADD_TO_SELECTED_TABLE';\nexport const DELETE_FROM_SELECTED_TABLE = 'DELETE_FROM_SELECTED_TABLE'; //#endregion","map":{"version":3,"sources":["C:/Users/sarai/Documents/aldi/uas/react-mysql/client/src/store/actions.js"],"names":["axios","insertQueryResult","objectToAdd","Axios","post","then","response","getQueryResult","fetchSelectedTableSync","tableData","type","FETCH_SELECTED_TABLE","payload","fetchSelectedTable","dispatch","get","tableDatas","data","catch","error","console","log","deleteFromSelectedTable","columnName","value","deleteTable","insertToSelectedTable","REQUEST_SELECTED_TABLE","ADD_TO_SELECTED_TABLE","DELETE_FROM_SELECTED_TABLE"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,iBAAiB,GAAIC,WAAD,IAAiB;AACvCC,EAAAA,KAAK,CAACC,IAAN,CAAW,8BAAX,EAA2CF,WAA3C,EAAwDG,IAAxD,CAA8DC,QAAD,IAAc;AACvEC,IAAAA,cAAc;AACjB,GAFD;AAGH,CAJD,C,CAKA;;;AAEA,OAAO,MAAMC,sBAAsB,GAAIC,SAAD,IAAe;AACjD,SAAO;AACHC,IAAAA,IAAI,EAAEC,oBADH;AAEHC,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAMI,kBAAkB,GAAG,MAAM;AACpC,SAAQC,QAAD,IAAc;AACjBX,IAAAA,KAAK,CAACY,GAAN,CAAU,gCAAV,EAA6CV,IAA7C,CAAmDC,QAAD,IAAc;AAC5D,YAAMU,UAAU,GAAGV,QAAQ,CAACW,IAA5B;AACAH,MAAAA,QAAQ,CAACD,kBAAkB,CAACJ,SAAD,CAAnB,CAAR;AACH,KAHD,EAGGS,KAHH,CAGUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KALD;AAMH,GAPD;AAQH,CATM;AAWP,OAAO,MAAMG,uBAAuB,GAAG,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAC1D,SAAQV,QAAD,IAAc;AAEjBX,IAAAA,KAAK,CAACC,IAAN,CAAW,8BAAX,EACI;AACImB,MAAAA,UAAU,EAAEA,UADhB;AAEIC,MAAAA,KAAK,EAAEA;AAFX,KADJ,EAKEnB,IALF,CAKQC,QAAD,IAAc;AACjBC,MAAAA,cAAc;AACdO,MAAAA,QAAQ,CAACW,WAAW,CAACF,UAAD,EAAaC,KAAb,CAAZ,CAAR;AACH,KARD;AASH,GAXD;AAYH,CAbM;AAeP,OAAO,MAAME,qBAAqB,GAAIxB,WAAD,IAAiB;AAClD,SAAQY,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACb,iBAAiB,CAACC,WAAD,CAAlB,CAAR;AACH,GAFD;AAGH,CAJM,C,CAKP;AAEA;;AACA,OAAO,MAAMyB,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,MAAMhB,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMiB,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC,C,CACP","sourcesContent":["import axios from 'axios';\r\n\r\n//#region Axios requests   \r\nconst insertQueryResult = (objectToAdd) => {\r\n    Axios.post(\"http://localhost:3001/insert\", objectToAdd).then((response) => {\r\n        getQueryResult();\r\n    })\r\n}\r\n//#endregion\r\n\r\nexport const fetchSelectedTableSync = (tableData) => {\r\n    return {\r\n        type: FETCH_SELECTED_TABLE,\r\n        payload: tableData,\r\n    }\r\n}\r\n\r\n//#region Async methods\r\nexport const fetchSelectedTable = () => {\r\n    return (dispatch) => {\r\n        Axios.get(\"http://localhost:3001/getTable\",).then((response) => {\r\n            const tableDatas = response.data;\r\n            dispatch(fetchSelectedTable(tableData));\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteFromSelectedTable = (columnName, value) => {\r\n    return (dispatch) => {\r\n\r\n        Axios.post(\"http://localhost:3001/delete\",\r\n            {\r\n                columnName: columnName,\r\n                value: value\r\n            }\r\n        ).then((response) => {\r\n            getQueryResult();\r\n            dispatch(deleteTable(columnName, value));\r\n        })\r\n    }\r\n}\r\n\r\nexport const insertToSelectedTable = (objectToAdd) => {\r\n    return (dispatch) => {\r\n        dispatch(insertQueryResult(objectToAdd));\r\n    }\r\n}\r\n//#endregion\r\n\r\n//#region Actions name\r\nexport const REQUEST_SELECTED_TABLE = \"REQUEST_SELECTED_TABLE\";\r\n\r\nexport const FETCH_SELECTED_TABLE = \"FETCH_SELECTED_TABLE\";\r\nexport const ADD_TO_SELECTED_TABLE = 'ADD_TO_SELECTED_TABLE';\r\nexport const DELETE_FROM_SELECTED_TABLE = 'DELETE_FROM_SELECTED_TABLE';\r\n//#endregion"]},"metadata":{},"sourceType":"module"}