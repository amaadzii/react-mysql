{"ast":null,"code":"import axios from 'axios'; //#region Axios requests\n\nconst getQueryResult = () => {\n  Axios.get(\"http://localhost:3001/getTable\").then(response => {\n    setQueryResult(response.data);\n    let newColumns = [];\n    Object.keys(response.data[0]).map((value, index) => {\n      return newColumns.push(value);\n    });\n    setColumns(newColumns);\n  }).catch(error => {\n    console.log(error);\n  });\n};\n\nconst deleteTable = (columnName, value) => {\n  Axios.post(\"http://localhost:3001/delete\", {\n    columnName: columnName,\n    value: value\n  }).then(response => {\n    getQueryResult();\n  });\n};\n\nconst insertQueryResult = objectToAdd => {\n  Axios.post(\"http://localhost:3001/insert\", objectToAdd).then(response => {\n    getQueryResult();\n  });\n}; //#endregion\n//#region Sync methods\n\n\nexport const prepareSelectedTable = () => {\n  return {\n    type: ON_TABLE_SELECTED\n  };\n}; //#endregion\n//#region Async methods\n\nexport const fetchSelectedTable = () => {\n  return dispatch => {\n    dispatch(getQueryResult());\n  };\n};\nexport const deleteFromSelectedTable = (columnName, value) => {\n  return dispatch => {\n    dispatch(deleteTable(columnName, value));\n  };\n};\nexport const insertToSelectedTable = objectToAdd => {\n  return dispatch => {\n    dispatch(insertQueryResult(objectToAdd));\n  };\n}; //#endregion\n//#region Actions name\n\nexport const FETCH_SELECTED_TABLE = \"FETCH_SELECTED_TABLE\";\nexport const ADD_TO_SELECTED_TABLE = 'ADD_TO_SELECTED_TABLE';\nexport const DELETE_FROM_SELECTED_TABLE = 'DELETE_FROM_SELECTED_TABLE'; //#endregion","map":{"version":3,"sources":["C:/Users/sarai/Documents/aldi/uas/react-mysql/client/src/store/actions.js"],"names":["axios","getQueryResult","Axios","get","then","response","setQueryResult","data","newColumns","Object","keys","map","value","index","push","setColumns","catch","error","console","log","deleteTable","columnName","post","insertQueryResult","objectToAdd","prepareSelectedTable","type","ON_TABLE_SELECTED","fetchSelectedTable","dispatch","deleteFromSelectedTable","insertToSelectedTable","FETCH_SELECTED_TABLE","ADD_TO_SELECTED_TABLE","DELETE_FROM_SELECTED_TABLE"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,cAAc,GAAG,MAAM;AACzBC,EAAAA,KAAK,CAACC,GAAN,CAAU,gCAAV,EAA6CC,IAA7C,CAAmDC,QAAD,IAAc;AAC9DC,IAAAA,cAAc,CAACD,QAAQ,CAACE,IAAV,CAAd;AAEA,QAAIC,UAAU,GAAG,EAAjB;AACAC,IAAAA,MAAM,CAACC,IAAP,CAAYL,QAAQ,CAACE,IAAT,CAAc,CAAd,CAAZ,EAA8BI,GAA9B,CAAkC,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClD,aAAOL,UAAU,CAACM,IAAX,CAAgBF,KAAhB,CAAP;AACD,KAFD;AAGAG,IAAAA,UAAU,CAACP,UAAD,CAAV;AACD,GARD,EAQGQ,KARH,CAQUC,KAAD,IAAW;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAVD;AAWD,CAZH;;AAcE,MAAMG,WAAW,GAAG,CAACC,UAAD,EAAaT,KAAb,KAAuB;AACzCV,EAAAA,KAAK,CAACoB,IAAN,CAAW,8BAAX,EACE;AACED,IAAAA,UAAU,EAAEA,UADd;AAEET,IAAAA,KAAK,EAAEA;AAFT,GADF,EAKER,IALF,CAKQC,QAAD,IAAc;AACnBJ,IAAAA,cAAc;AACf,GAPD;AASD,CAVD;;AAYA,MAAMsB,iBAAiB,GAAIC,WAAD,IAAiB;AACzCtB,EAAAA,KAAK,CAACoB,IAAN,CAAW,8BAAX,EAA2CE,WAA3C,EAAwDpB,IAAxD,CAA8DC,QAAD,IAAc;AACzEJ,IAAAA,cAAc;AACf,GAFD;AAGD,CAJD,C,CAKF;AAEA;;;AACA,OAAO,MAAMwB,oBAAoB,GAAG,MAAM;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAEC;AADH,GAAP;AAGH,CAJM,C,CAKP;AAEA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACpC,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAC5B,cAAc,EAAf,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAM6B,uBAAuB,GAAG,CAACT,UAAD,EAAaT,KAAb,KAAuB;AAC1D,SAAQiB,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACT,WAAW,CAACC,UAAD,EAAaT,KAAb,CAAZ,CAAR;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMmB,qBAAqB,GAAIP,WAAD,IAAiB;AAClD,SAAQK,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACN,iBAAiB,CAACC,WAAD,CAAlB,CAAR;AACH,GAFD;AAGH,CAJM,C,CAKP;AAEA;;AACA,OAAO,MAAMQ,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,0BAA0B,GAAG,4BAAnC,C,CACP","sourcesContent":["import axios from 'axios';\r\n\r\n//#region Axios requests\r\nconst getQueryResult = () => {\r\n    Axios.get(\"http://localhost:3001/getTable\",).then((response) => {\r\n      setQueryResult(response.data);\r\n\r\n      let newColumns = [];\r\n      Object.keys(response.data[0]).map((value, index) => {\r\n        return newColumns.push(value);\r\n      })\r\n      setColumns(newColumns);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  const deleteTable = (columnName, value) => {\r\n    Axios.post(\"http://localhost:3001/delete\",\r\n      {\r\n        columnName: columnName,\r\n        value: value\r\n      }\r\n    ).then((response) => {\r\n      getQueryResult();\r\n    })\r\n\r\n  }\r\n\r\n  const insertQueryResult = (objectToAdd) => { \r\n    Axios.post(\"http://localhost:3001/insert\", objectToAdd).then((response) => {\r\n      getQueryResult();\r\n    })\r\n  } \r\n//#endregion\r\n\r\n//#region Sync methods\r\nexport const prepareSelectedTable = () => {\r\n    return {\r\n        type: ON_TABLE_SELECTED,\r\n    }\r\n}\r\n//#endregion\r\n\r\n//#region Async methods\r\nexport const fetchSelectedTable = () => {\r\n    return (dispatch) => {\r\n        dispatch(getQueryResult());\r\n    }\r\n}\r\n\r\nexport const deleteFromSelectedTable = (columnName, value) => {\r\n    return (dispatch) => {\r\n        dispatch(deleteTable(columnName, value));\r\n    }\r\n}\r\n\r\nexport const insertToSelectedTable = (objectToAdd) => {\r\n    return (dispatch) => {\r\n        dispatch(insertQueryResult(objectToAdd));\r\n    }\r\n}\r\n//#endregion\r\n\r\n//#region Actions name\r\nexport const FETCH_SELECTED_TABLE = \"FETCH_SELECTED_TABLE\";\r\nexport const ADD_TO_SELECTED_TABLE = 'ADD_TO_SELECTED_TABLE';\r\nexport const DELETE_FROM_SELECTED_TABLE = 'DELETE_FROM_SELECTED_TABLE';\r\n//#endregion"]},"metadata":{},"sourceType":"module"}