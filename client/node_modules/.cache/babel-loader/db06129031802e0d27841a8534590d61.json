{"ast":null,"code":"import Axios from 'axios';\nimport Server from '../Axios/Server';\nexport const fetchSelectedTableSync = tableData => {\n  return {\n    type: FETCH_SELECTED_TABLE,\n    payload: tableData\n  };\n};\nexport const fetchTablesSync = tables => {\n  return {\n    type: FETCH_TABLES,\n    payload: tables\n  };\n}; //#region Async methods\n\nexport const fetchTables = () => {\n  return dispatch => {\n    Server.fetchTablesData().then(response => {\n      dispatch(fetchTablesSync(response.data));\n    });\n  };\n};\nexport const selectTablesSync = tableName => {\n  return {\n    type: SELECT_TABLE,\n    payload: tableName\n  };\n};\nexport const fetchSelectedTable = () => {\n  return dispatch => {\n    Axios.get(\"http://localhost:3001/getTable\").then(response => {\n      dispatch(fetchSelectedTableSync(response.data));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const deleteFromSelectedTable = (columnName, value) => {\n  return dispatch => {\n    Axios.post(\"http://localhost:3001/delete\", {\n      columnName: columnName,\n      value: value\n    }).then(response => {\n      dispatch(fetchSelectedTable());\n    });\n  };\n};\nexport const insertToSelectedTable = objectToAdd => {\n  return dispatch => {\n    Axios.post(\"http://localhost:3001/insert\", objectToAdd).then(response => {\n      dispatch(fetchSelectedTable());\n    });\n  };\n}; //#endregion\n//#region Actions name \n\nexport const FETCH_TABLES = \"FETCH_TABLES\"; // Initialize list of tables in this db.\n\nexport const SELECT_TABLE = \"SELECT_TABLES\"; // Initialize selected table.\n\nexport const FETCH_SELECTED_TABLE = \"FETCH_SELECTED_TABLE\"; // Get column and row of selected table\n//#endregion","map":{"version":3,"sources":["C:/Users/sarai/Documents/aldi/uas/react-mysql/client/src/store/actions.js"],"names":["Axios","Server","fetchSelectedTableSync","tableData","type","FETCH_SELECTED_TABLE","payload","fetchTablesSync","tables","FETCH_TABLES","fetchTables","dispatch","fetchTablesData","then","response","data","selectTablesSync","tableName","SELECT_TABLE","fetchSelectedTable","get","catch","error","console","log","deleteFromSelectedTable","columnName","value","post","insertToSelectedTable","objectToAdd"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAO,MAAMC,sBAAsB,GAAIC,SAAD,IAAe;AACjD,SAAO;AACHC,IAAAA,IAAI,EAAEC,oBADH;AAEHC,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMI,eAAe,GAAIC,MAAD,IAAY;AACvC,SAAO;AACHJ,IAAAA,IAAI,EAAEK,YADH;AAEHH,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,MAAME,WAAW,GAAG,MAAM;AAC7B,SAAQC,QAAD,IAAc;AACjBV,IAAAA,MAAM,CAACW,eAAP,GAAyBC,IAAzB,CAA8BC,QAAQ,IAAI;AACtCH,MAAAA,QAAQ,CAACJ,eAAe,CAACO,QAAQ,CAACC,IAAV,CAAhB,CAAR;AACH,KAFD;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AAC3C,SAAO;AACHb,IAAAA,IAAI,EAAEc,YADH;AAEHZ,IAAAA,OAAO,EAAEW;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAG,MAAM;AACpC,SAAQR,QAAD,IAAc;AACjBX,IAAAA,KAAK,CAACoB,GAAN,CAAU,gCAAV,EAA6CP,IAA7C,CAAmDC,QAAD,IAAc;AAC5DH,MAAAA,QAAQ,CAACT,sBAAsB,CAACY,QAAQ,CAACC,IAAV,CAAvB,CAAR;AACH,KAFD,EAEGM,KAFH,CAEUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAJD;AAKH,GAND;AAOH,CARM;AAUP,OAAO,MAAMG,uBAAuB,GAAG,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAC1D,SAAQhB,QAAD,IAAc;AACjBX,IAAAA,KAAK,CAAC4B,IAAN,CAAW,8BAAX,EACI;AACIF,MAAAA,UAAU,EAAEA,UADhB;AAEIC,MAAAA,KAAK,EAAEA;AAFX,KADJ,EAKEd,IALF,CAKQC,QAAD,IAAc;AACjBH,MAAAA,QAAQ,CAACQ,kBAAkB,EAAnB,CAAR;AACH,KAPD;AAQH,GATD;AAUH,CAXM;AAaP,OAAO,MAAMU,qBAAqB,GAAIC,WAAD,IAAiB;AAClD,SAAQnB,QAAD,IAAc;AAEjBX,IAAAA,KAAK,CAAC4B,IAAN,CAAW,8BAAX,EAA2CE,WAA3C,EAAwDjB,IAAxD,CAA8DC,QAAD,IAAc;AACvEH,MAAAA,QAAQ,CAACQ,kBAAkB,EAAnB,CAAR;AACH,KAFD;AAGH,GALD;AAMH,CAPM,C,CAQP;AAEA;;AACA,OAAO,MAAMV,YAAY,GAAG,cAArB,C,CAAqC;;AAC5C,OAAO,MAAMS,YAAY,GAAG,eAArB,C,CAAsC;;AAC7C,OAAO,MAAMb,oBAAoB,GAAG,sBAA7B,C,CAAuD;AAE9D","sourcesContent":["import Axios from 'axios';\r\nimport Server from '../Axios/Server';\r\n\r\nexport const fetchSelectedTableSync = (tableData) => {\r\n    return {\r\n        type: FETCH_SELECTED_TABLE,\r\n        payload: tableData,\r\n    }\r\n}\r\n\r\nexport const fetchTablesSync = (tables) => {\r\n    return {\r\n        type: FETCH_TABLES,\r\n        payload: tables,\r\n    }\r\n}\r\n\r\n//#region Async methods\r\nexport const fetchTables = () => {\r\n    return (dispatch) => {\r\n        Server.fetchTablesData().then(response => {\r\n            dispatch(fetchTablesSync(response.data));\r\n        }) \r\n    }\r\n}\r\n\r\nexport const selectTablesSync = (tableName) => {\r\n    return {\r\n        type: SELECT_TABLE,\r\n        payload: tableName,\r\n    }\r\n}\r\n\r\nexport const fetchSelectedTable = () => {\r\n    return (dispatch) => {\r\n        Axios.get(\"http://localhost:3001/getTable\",).then((response) => {\r\n            dispatch(fetchSelectedTableSync(response.data));\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteFromSelectedTable = (columnName, value) => {\r\n    return (dispatch) => {\r\n        Axios.post(\"http://localhost:3001/delete\",\r\n            {\r\n                columnName: columnName,\r\n                value: value\r\n            }\r\n        ).then((response) => {\r\n            dispatch(fetchSelectedTable());\r\n        })\r\n    }\r\n}\r\n\r\nexport const insertToSelectedTable = (objectToAdd) => {\r\n    return (dispatch) => {\r\n\r\n        Axios.post(\"http://localhost:3001/insert\", objectToAdd).then((response) => {\r\n            dispatch(fetchSelectedTable());\r\n        })\r\n    }\r\n}\r\n//#endregion\r\n\r\n//#region Actions name \r\nexport const FETCH_TABLES = \"FETCH_TABLES\"; // Initialize list of tables in this db.\r\nexport const SELECT_TABLE = \"SELECT_TABLES\"; // Initialize selected table.\r\nexport const FETCH_SELECTED_TABLE = \"FETCH_SELECTED_TABLE\";   // Get column and row of selected table\r\n\r\n//#endregion"]},"metadata":{},"sourceType":"module"}