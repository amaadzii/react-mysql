{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sarai\\\\Documents\\\\aldi\\\\uas\\\\react-mysql\\\\client\\\\src\\\\components\\\\EditMenu\\\\EditMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport Server from '../../Axios/ServerAPI';\nModal.setAppElement('#root');\n\nconst EditMenu = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const tableName = useSelector(state => state.tableName);\n  const editModal = useSelector(state => state.editModal); // {Kode_Obat: \"SRSCF1723\", Nama_Obat: \"SUCRALFATE\", Bentuk_Obat: \"Syrup\", \n  // Tgl_Produksi: \"2017-03-22T17:00:00.000Z\", Tgl_Kadaluarsa: \"2023-03-19T17:00:00.000Z\", …}\n\n  const defaultData = useSelector(state => state.defaultData); //[{\"Field\":\"Kode_Obat\",\"Type\":\"varchar(10)\",\"Null\":\"NO\",\"Key\":\"PRI\",\"Default\":null,\"Extra\":\"\"},\n\n  const [tableDesc, setTableDesc] = useState([{}]);\n  const [editFields, setEditFields] = useState({});\n\n  const saveChanges = e => {\n    e.preventDefault();\n    Server.editTableFields(tableName, editFields, defaultData).then(res => {\n      dispatch(actions.diasbleEditModal());\n      return res;\n    });\n  };\n\n  let modalContent = /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [tableDesc ? Object.keys(tableDesc[0]).map((columnName, colId) => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              children: columnName\n            }, colId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 41\n            }, this);\n          }) : null, /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: defaultData ? Object.keys(defaultData).map((dataName, dataID) => {\n          return tableDesc[dataID] ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [Object.keys(tableDesc[dataID]).map((descName, descId) => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: tableDesc[dataID][descName]\n              }, descName, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 57\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                defaultValue: defaultData[dataName],\n                onChange: e => {\n                  const value = e.target.value;\n                  setEditFields(prevValue => {\n                    return { ...prevValue,\n                      [dataName]: value\n                    };\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 45\n            }, this)]\n          }, dataName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 41\n          }, this) : null;\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        e.preventDefault();\n        onCloseHandler();\n      },\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => saveChanges(e),\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n\n  const onOpenHandler = () => {\n    Server.fetchTableDesc(tableName).then(response => {\n      setTableDesc(response.data);\n    });\n  };\n\n  const onCloseHandler = () => {\n    dispatch(actions.diasbleEditModal());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: editModal,\n    onAfterOpen: onOpenHandler,\n    onRequestClose: onCloseHandler,\n    children: modalContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditMenu, \"A/OQfu3DPNWxAjhLr69oN0oIim8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = EditMenu;\nexport default EditMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMenu\");","map":{"version":3,"sources":["C:/Users/sarai/Documents/aldi/uas/react-mysql/client/src/components/EditMenu/EditMenu.js"],"names":["React","useState","Modal","useDispatch","useSelector","actions","Server","setAppElement","EditMenu","props","dispatch","tableName","state","editModal","defaultData","tableDesc","setTableDesc","editFields","setEditFields","saveChanges","e","preventDefault","editTableFields","then","res","diasbleEditModal","modalContent","width","Object","keys","map","columnName","colId","dataName","dataID","descName","descId","value","target","prevValue","onCloseHandler","onOpenHandler","fetchTableDesc","response","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\nimport Server from '../../Axios/ServerAPI';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst EditMenu = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const tableName = useSelector(state => state.tableName);\r\n    const editModal = useSelector(state => state.editModal);\r\n\r\n    // {Kode_Obat: \"SRSCF1723\", Nama_Obat: \"SUCRALFATE\", Bentuk_Obat: \"Syrup\", \r\n    // Tgl_Produksi: \"2017-03-22T17:00:00.000Z\", Tgl_Kadaluarsa: \"2023-03-19T17:00:00.000Z\", …}\r\n    const defaultData = useSelector(state => state.defaultData); \r\n\r\n    //[{\"Field\":\"Kode_Obat\",\"Type\":\"varchar(10)\",\"Null\":\"NO\",\"Key\":\"PRI\",\"Default\":null,\"Extra\":\"\"},\r\n    const [tableDesc, setTableDesc] = useState([{}]);\r\n\r\n    const [editFields, setEditFields] = useState({});\r\n\r\n    const saveChanges = (e) => {\r\n        e.preventDefault();\r\n        Server.editTableFields(tableName, editFields, defaultData)\r\n            .then(res => { \r\n                dispatch(actions.diasbleEditModal()); \r\n                return res\r\n            });\r\n    }\r\n\r\n    let modalContent = (\r\n        <form>\r\n            <h2>Edit Value</h2>\r\n            <table style={{ width: \"100%\" }}>\r\n                <thead>\r\n                    <tr>\r\n                        {\r\n                            tableDesc ?\r\n                                Object.keys(tableDesc[0]).map((columnName, colId) => {\r\n                                    return (\r\n                                        <th key={colId}>\r\n                                            {columnName}\r\n                                        </th>\r\n                                    )\r\n                                }) : null\r\n                        }\r\n                        <th>\r\n                            Value\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        defaultData ?\r\n                            Object.keys(defaultData).map((dataName, dataID) => {\r\n                                return (\r\n                                    tableDesc[dataID] ?\r\n                                        <tr key={dataName}>\r\n                                            {\r\n                                                Object.keys(tableDesc[dataID]).map((descName, descId) => {\r\n                                                    return (\r\n                                                        <td key={descName}>{tableDesc[dataID][descName]}</td>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                            <td>\r\n                                                <input\r\n                                                    defaultValue={defaultData[dataName]}\r\n                                                    onChange={(e) => {\r\n                                                        const value = e.target.value;\r\n                                                        setEditFields(prevValue => {\r\n                                                            return {\r\n                                                                ...prevValue,\r\n                                                                [dataName]: value,\r\n                                                            }\r\n                                                        })\r\n                                                    }}\r\n                                                ></input>\r\n                                            </td>\r\n                                        </tr>\r\n                                        : null\r\n                                )\r\n                            }) : null\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <button onClick={(e) => {\r\n                e.preventDefault();\r\n                onCloseHandler();\r\n            }}>Cancel</button>\r\n            <button onClick={(e) => saveChanges(e)}>Save Changes</button>\r\n        </form>\r\n    )\r\n\r\n    const onOpenHandler = () => {\r\n        Server.fetchTableDesc(tableName).then(response => {\r\n            setTableDesc(response.data);\r\n        })\r\n    }\r\n\r\n    const onCloseHandler = () => {\r\n        dispatch(actions.diasbleEditModal());\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={editModal}\r\n            onAfterOpen={onOpenHandler}\r\n            onRequestClose={onCloseHandler}>\r\n            {modalContent}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditMenu;"]},"metadata":{},"sourceType":"module"}