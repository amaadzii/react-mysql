{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sarai\\\\Documents\\\\aldi\\\\uas\\\\react-mysql\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Axios from 'axios';\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions';\n\nfunction App() {\n  _s();\n\n  //#region \n  const [addFields, setAddFields] = useState({}); //#endregion\n  //#region API\n\n  const getQueryResult = () => {\n    Axios.get(\"http://localhost:3001/getTable\").then(response => {\n      setQueryResult(response.data);\n      let newColumns = [];\n      Object.keys(response.data[0]).map((value, index) => {\n        return newColumns.push(value);\n      });\n      setColumns(newColumns);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const deleteTable = (columnName, value) => {\n    Axios.post(\"http://localhost:3001/delete\", {\n      columnName: columnName,\n      value: value\n    }).then(response => {\n      getQueryResult();\n    });\n  };\n\n  const insertQueryResult = e => {\n    e.preventDefault();\n    Axios.post(\"http://localhost:3001/insert\", addFields).then(response => {\n      getQueryResult();\n    });\n  }; //#endregion \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Apotek Jakarta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getQueryResult,\n      children: \"Intialize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [// Render table column name \n          this.props.columnsName.map((columnName, index) => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              children: columnName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 24\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: // Render table content  \n        this.props.tableData.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [Object.keys(val).map((keyName, index) => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val[keyName]\n              }, key + \" \" + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.props.deleteTable(columns[0], val[Object.keys(val)[0]]),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.props.deleteTable(columns[0], val[Object.keys(val)[0]]),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Anggota: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [this.props.columnsName.map((value, index) => {\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: value,\n          onChange: event => {\n            const value = event.target.value;\n            setAddFields(prevValue => {\n              return { ...prevValue,\n                [columns[index]]: value\n              };\n            });\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          insertQueryResult(e);\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U3zcQ4hckbPLQpAqghch8rb/O0E=\");\n\n_c = App;\n\nconst mapStateToPropos = stateFromStore => {\n  return {\n    tableData: stateFromStore.tableData,\n    columnsName: stateFromStore.columnsName\n  };\n};\n\nconst mapToDispatch = dispatch => {\n  return {\n    deleteTable: (columnName, value) => dispatch(actions.deleteFromSelectedTable(columnName, value)),\n    insertToTable: objectToAdd => dispatch(actions.insertToSelectedTable(objectToAdd)),\n    fetchSelectedTable: () => dispatch(actions.fetchSelectedTable())\n  };\n};\n\nexport default connect(mapStateToPropos, mapToDispatch)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/sarai/Documents/aldi/uas/react-mysql/client/src/App.js"],"names":["Axios","React","useState","connect","actions","App","addFields","setAddFields","getQueryResult","get","then","response","setQueryResult","data","newColumns","Object","keys","map","value","index","push","setColumns","catch","error","console","log","deleteTable","columnName","post","insertQueryResult","e","preventDefault","width","props","columnsName","tableData","val","key","keyName","columns","event","target","prevValue","mapStateToPropos","stateFromStore","mapToDispatch","dispatch","deleteFromSelectedTable","insertToTable","objectToAdd","insertToSelectedTable","fetchSelectedTable"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C,CAFa,CAGb;AAEA;;AACA,QAAMM,cAAc,GAAG,MAAM;AAC3BR,IAAAA,KAAK,CAACS,GAAN,CAAU,gCAAV,EAA6CC,IAA7C,CAAmDC,QAAD,IAAc;AAC9DC,MAAAA,cAAc,CAACD,QAAQ,CAACE,IAAV,CAAd;AAEA,UAAIC,UAAU,GAAG,EAAjB;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYL,QAAQ,CAACE,IAAT,CAAc,CAAd,CAAZ,EAA8BI,GAA9B,CAAkC,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAClD,eAAOL,UAAU,CAACM,IAAX,CAAgBF,KAAhB,CAAP;AACD,OAFD;AAGAG,MAAAA,UAAU,CAACP,UAAD,CAAV;AACD,KARD,EAQGQ,KARH,CAQUC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAVD;AAWD,GAZD;;AAcA,QAAMG,WAAW,GAAG,CAACC,UAAD,EAAaT,KAAb,KAAuB;AACzClB,IAAAA,KAAK,CAAC4B,IAAN,CAAW,8BAAX,EACE;AACED,MAAAA,UAAU,EAAEA,UADd;AAEET,MAAAA,KAAK,EAAEA;AAFT,KADF,EAKER,IALF,CAKQC,QAAD,IAAc;AACnBH,MAAAA,cAAc;AACf,KAPD;AASD,GAVD;;AAYA,QAAMqB,iBAAiB,GAAIC,CAAD,IAAO;AAC/BA,IAAAA,CAAC,CAACC,cAAF;AAEA/B,IAAAA,KAAK,CAAC4B,IAAN,CAAW,8BAAX,EAA2CtB,SAA3C,EAAsDI,IAAtD,CAA4DC,QAAD,IAAc;AACvEH,MAAAA,cAAc;AACf,KAFD;AAGD,GAND,CAhCa,CAuCb;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEA,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAO,MAAA,KAAK,EAAE;AAAEwB,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAA,8BACE;AAAA,+BACE;AAAA,qBACI;AACA,eAAKC,KAAL,CAAWC,WAAX,CAAuBjB,GAAvB,CAA2B,CAACU,UAAD,EAAaR,KAAb,KAAuB;AAChD,gCAAO;AAAA,wBAAiBQ;AAAjB,eAASR,KAAT;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFD,CAFJ,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,kBACG;AACC,aAAKc,KAAL,CAAWE,SAAX,CAAqBlB,GAArB,CAAyB,CAACmB,GAAD,EAAMC,GAAN,KAAc;AACrC,8BACE;AAAA,uBACGtB,MAAM,CAACC,IAAP,CAAYoB,GAAZ,EAAiBnB,GAAjB,CAAqB,CAACqB,OAAD,EAAUnB,KAAV,KAAoB;AACxC,kCAAQ;AAAA,0BAA6BiB,GAAG,CAACE,OAAD;AAAhC,iBAASD,GAAG,GAAG,GAAN,GAAYlB,KAArB;AAAA;AAAA;AAAA;AAAA,sBAAR;AACD,aAFA,CADH,eAIE;AAAA,sCACE;AAAQ,gBAAA,OAAO,EAAE,MAAM,KAAKc,KAAL,CAAWP,WAAX,CAAuBa,OAAO,CAAC,CAAD,CAA9B,EAAmCH,GAAG,CAACrB,MAAM,CAACC,IAAP,CAAYoB,GAAZ,EAAiB,CAAjB,CAAD,CAAtC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAQ,gBAAA,OAAO,EAAE,MAAM,KAAKH,KAAL,CAAWP,WAAX,CAAuBa,OAAO,CAAC,CAAD,CAA9B,EAAmCH,GAAG,CAACrB,MAAM,CAACC,IAAP,CAAYoB,GAAZ,EAAiB,CAAjB,CAAD,CAAtC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA,aAASC,GAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAWD,SAZD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAgCE;AAAA;AAAA;AAAA;AAAA,YAhCF,eAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCF,eAmCI;AAAA,iBACG,KAAKJ,KAAL,CAAWC,WAAX,CAAuBjB,GAAvB,CAA2B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5C,4BACE;AAEE,UAAA,WAAW,EAAED,KAFf;AAGE,UAAA,QAAQ,EAAGsB,KAAD,IAAW;AACnB,kBAAMtB,KAAK,GAAGsB,KAAK,CAACC,MAAN,CAAavB,KAA3B;AACAX,YAAAA,YAAY,CAAEmC,SAAD,IAAe;AAC1B,qBAAO,EACL,GAAGA,SADE;AAEL,iBAACH,OAAO,CAACpB,KAAD,CAAR,GAAkBD;AAFb,eAAP;AAID,aALW,CAAZ;AAMD;AAXH,WACOC,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAeD,OAhBA,CADH,eAkBE;AAAQ,QAAA,OAAO,EAAGW,CAAD,IAAO;AACtBD,UAAAA,iBAAiB,CAACC,CAAD,CAAjB;AACC,SAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD;;GAtGQzB,G;;KAAAA,G;;AAwGT,MAAMsC,gBAAgB,GAAIC,cAAD,IAAoB;AAC3C,SAAO;AACLT,IAAAA,SAAS,EAAES,cAAc,CAACT,SADrB;AAELD,IAAAA,WAAW,EAAEU,cAAc,CAACV;AAFvB,GAAP;AAID,CALD;;AAOA,MAAMW,aAAa,GAAIC,QAAD,IAAc;AAClC,SAAO;AACLpB,IAAAA,WAAW,EAAE,CAACC,UAAD,EAAaT,KAAb,KAAuB4B,QAAQ,CAAC1C,OAAO,CAAC2C,uBAAR,CAAgCpB,UAAhC,EAA4CT,KAA5C,CAAD,CADvC;AAEL8B,IAAAA,aAAa,EAAGC,WAAD,IAAiBH,QAAQ,CAAC1C,OAAO,CAAC8C,qBAAR,CAA8BD,WAA9B,CAAD,CAFnC;AAGLE,IAAAA,kBAAkB,EAAE,MAAML,QAAQ,CAAC1C,OAAO,CAAC+C,kBAAR,EAAD;AAH7B,GAAP;AAKD,CAND;;AAQA,eAAehD,OAAO,CAACwC,gBAAD,EAAmBE,aAAnB,CAAP,CAAyCxC,GAAzC,CAAf","sourcesContent":["import './App.css';\r\nimport Axios from 'axios';\r\nimport React, { useState } from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport * as actions from './store/actions';\r\n\r\nfunction App() {  \r\n  //#region \r\n  const [addFields, setAddFields] = useState({});\r\n  //#endregion\r\n\r\n  //#region API\r\n  const getQueryResult = () => {\r\n    Axios.get(\"http://localhost:3001/getTable\",).then((response) => {\r\n      setQueryResult(response.data);\r\n\r\n      let newColumns = [];\r\n      Object.keys(response.data[0]).map((value, index) => {\r\n        return newColumns.push(value);\r\n      })\r\n      setColumns(newColumns);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  const deleteTable = (columnName, value) => {\r\n    Axios.post(\"http://localhost:3001/delete\",\r\n      {\r\n        columnName: columnName,\r\n        value: value\r\n      }\r\n    ).then((response) => {\r\n      getQueryResult();\r\n    })\r\n\r\n  }\r\n\r\n  const insertQueryResult = (e) => {\r\n    e.preventDefault();\r\n\r\n    Axios.post(\"http://localhost:3001/insert\", addFields).then((response) => {\r\n      getQueryResult();\r\n    })\r\n  }\r\n  //#endregion \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Apotek Jakarta</h1>\r\n      <button onClick={getQueryResult}>Intialize</button>\r\n\r\n      <table style={{ width: \"100%\" }}>\r\n        <thead>\r\n          <tr>\r\n            { // Render table column name \r\n              this.props.columnsName.map((columnName, index) => {\r\n                return <th key={index}>{columnName}</th>\r\n              })}\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {// Render table content  \r\n            this.props.tableData.map((val, key) => {\r\n              return (\r\n                <tr key={key}>\r\n                  {Object.keys(val).map((keyName, index) => {\r\n                    return (<td key={key + \" \" + index}>{val[keyName]}</td>)\r\n                  })}\r\n                  <td>\r\n                    <button onClick={() => this.props.deleteTable(columns[0], val[Object.keys(val)[0]])}>Edit</button>\r\n                    <button onClick={() => this.props.deleteTable(columns[0], val[Object.keys(val)[0]])}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              )\r\n            })\r\n          }\r\n        </tbody>\r\n      </table>\r\n      <br></br>\r\n      <h3>Add Anggota: </h3>\r\n      {\r\n        <form>\r\n          {this.props.columnsName.map((value, index) => {\r\n            return (\r\n              <input\r\n                key={index}\r\n                placeholder={value}\r\n                onChange={(event) => {\r\n                  const value = event.target.value;\r\n                  setAddFields((prevValue) => {\r\n                    return {\r\n                      ...prevValue,\r\n                      [columns[index]]: value,\r\n                    }\r\n                  })\r\n                }}\r\n              ></input>\r\n            )\r\n          })}\r\n          <button onClick={(e) => {\r\n            insertQueryResult(e)\r\n            }}>Add</button>\r\n        </form>\r\n      }\r\n    </div>\r\n  );\r\n} \r\n\r\nconst mapStateToPropos = (stateFromStore) => {\r\n  return {\r\n    tableData: stateFromStore.tableData,\r\n    columnsName: stateFromStore.columnsName,\r\n  } \r\n}\r\n\r\nconst mapToDispatch = (dispatch) => {\r\n  return {\r\n    deleteTable: (columnName, value) => dispatch(actions.deleteFromSelectedTable(columnName, value)),\r\n    insertToTable: (objectToAdd) => dispatch(actions.insertToSelectedTable(objectToAdd)),\r\n    fetchSelectedTable: () => dispatch(actions.fetchSelectedTable()),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToPropos, mapToDispatch)(App);\r\n"]},"metadata":{},"sourceType":"module"}