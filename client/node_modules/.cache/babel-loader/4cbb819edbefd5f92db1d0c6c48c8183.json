{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sarai\\\\Documents\\\\aldi\\\\uas\\\\react-mysql\\\\client\\\\src\\\\components\\\\EditableTable\\\\EditableTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport AddRowToTable from '../AddRowToTable/AddRowToTable';\nimport Server from '../../Axios/Server';\n\nconst EditableTable = props => {\n  _s();\n\n  const [tableData, setTableData] = useState([{\n    test: 'test',\n    lala: 'lala'\n  }]);\n\n  const update = () => {\n    Server.fetchTableData(props.tableName).then(res => setTableData(res.data));\n  };\n\n  const deleteHandler = (columnName, value) => {\n    Server.deleteFromTable(props.tableName, columnName, value);\n  }; // Start\n\n\n  useEffect(() => {\n    update();\n  }, []);\n\n  let actionHeader = /*#__PURE__*/_jsxDEV(\"th\", {\n    children: \"Action\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 24\n  }, this);\n\n  let actionButtons = /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [props.Editable, /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        deleteHandler();\n        update();\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 25\n  }, this);\n\n  let addButton = /*#__PURE__*/_jsxDEV(AddRowToTable, {\n    tableName: props.tableName,\n    tableData: tableData,\n    onClick: update\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n\n  if (!props.Editable) {\n    actionButtons = null;\n    addButton = null;\n    actionHeader = null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.tableName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [// Render table column name \n          Object.keys(tableData[0]).map((columnName, index) => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              children: columnName\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 40\n            }, this);\n          }), actionHeader]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: // Render table content  \n        tableData.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [Object.keys(val).map((keyName, index) => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: val[keyName]\n              }, key + \" \" + index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 49\n              }, this);\n            }), actionButtons]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), addButton]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditableTable, \"ygoNJB+onn5eXTU8ALWU7YljYcM=\");\n\n_c = EditableTable;\nexport default EditableTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableTable\");","map":{"version":3,"sources":["C:/Users/sarai/Documents/aldi/uas/react-mysql/client/src/components/EditableTable/EditableTable.js"],"names":["React","useEffect","useState","useDispatch","actions","AddRowToTable","Server","EditableTable","props","tableData","setTableData","test","lala","update","fetchTableData","tableName","then","res","data","deleteHandler","columnName","value","deleteFromTable","actionHeader","actionButtons","Editable","addButton","width","Object","keys","map","index","val","key","keyName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\nimport AddRowToTable from '../AddRowToTable/AddRowToTable';\r\nimport Server from '../../Axios/Server';\r\n\r\nconst EditableTable = (props) => {\r\n    const [tableData, setTableData] = useState([{ test: 'test', lala: 'lala' }]);\r\n\r\n    const update = () => {\r\n        Server.fetchTableData(props.tableName).then(res => setTableData(res.data));\r\n    }\r\n\r\n    const deleteHandler = (columnName, value) => {\r\n        Server.deleteFromTable(props.tableName, columnName, value);\r\n    }\r\n\r\n    // Start\r\n    useEffect(() => {\r\n        update();\r\n    }, [])\r\n\r\n    let actionHeader = <th>Action</th>;\r\n\r\n    let actionButtons = <td>\r\n        {props.Editable}\r\n        <button>Edit</button>\r\n        <button onClick={() => {\r\n            deleteHandler();\r\n            update();\r\n        }\r\n        }>Delete</button>\r\n    </td>\r\n\r\n    let addButton = <AddRowToTable\r\n        tableName={props.tableName}\r\n        tableData={tableData}\r\n        onClick={update}\r\n    ></AddRowToTable>\r\n\r\n    if (!props.Editable) {\r\n        actionButtons = null;\r\n        addButton = null;\r\n        actionHeader = null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>{props.tableName}</h3>\r\n            <table style={{ width: \"100%\" }}>\r\n                <thead>\r\n                    <tr>\r\n                        { // Render table column name \r\n                            Object.keys(tableData[0]).map((columnName, index) => {\r\n                                return <th key={index}>{columnName}</th>\r\n                            })}\r\n                        {actionHeader}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {// Render table content  \r\n                        tableData.map((val, key) => {\r\n                            return (\r\n                                <tr key={key}>\r\n                                    {Object.keys(val).map((keyName, index) => {\r\n                                        return (<td key={key + \" \" + index}>{val[keyName]}</td>)\r\n                                    })}\r\n                                    {actionButtons}\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            {addButton}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditableTable;"]},"metadata":{},"sourceType":"module"}